// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.648
package calendartempl

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "app/internal/public/templates"

func Calendar(cssDir []string) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Var2 := templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
			templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
			if !templ_7745c5c3_IsBuffer {
				templ_7745c5c3_Buffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<h1>Calendar </h1><button class=\"calendarview\" id=\"week\">Weekly </button> <button class=\"calendarview\" id=\"month\">Monthly </button> <button class=\"calendarview\" id=\"year\">Yearly </button><div id=\"calendar\"></div><script>\n        function showCalendar(gridcall){\n            var calendarEl = document.getElementById('calendar');\n            var calendar = new FullCalendar.Calendar(calendarEl, {\n                initialView: gridcall,\n                fixedWeekCount: false\n            });\n            calendar.render();\n        }\n        \n        document.getElementById(\"week\").addEventListener(\"click\", function() {\n            showCalendar('dayGridWeek');\n        });\n        document.getElementById(\"month\").addEventListener(\"click\", function() {\n            showCalendar('dayGridMonth');\n        });\n       document.getElementById(\"year\").addEventListener(\"click\", function() {\n            showCalendar('dayGridYear');\n        }); \n\n        function toggleVisibility() {\n            // desktop view\n            if (window.innerWidth <= 768) \n                showCalendar('dayGridWeek');\n            // mobile view\n            else \n                showCalendar('dayGridYear');\n        }\n\n        window.addEventListener('resize', toggleVisibility);\n        toggleVisibility();\n        </script>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			if !templ_7745c5c3_IsBuffer {
				_, templ_7745c5c3_Err = io.Copy(templ_7745c5c3_W, templ_7745c5c3_Buffer)
			}
			return templ_7745c5c3_Err
		})
		templ_7745c5c3_Err = templates.Base(cssDir, []string{"calendar/extensions/index.global.min.js"}, "Calendar").Render(templ.WithChildren(ctx, templ_7745c5c3_Var2), templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
